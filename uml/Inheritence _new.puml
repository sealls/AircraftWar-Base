@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedX():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- MobEnemy

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
class Elite{
    + Elite(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
AbstractAircraft <|-- Elite
class Boss{
    +Boss(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
AbstractAircraft <|--Boss
class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}
abstract class Props{
    + Props(int locationX,int locationY,int speedX,int speedY)
    + getHp():int
    + forward():void
    + getType():int

}
class Prop_Blood{
    - hp: int
    - maxHp: int
    + Prop_Blood(int locationX, int locationY, int speedX, int speedY,int hp)
    + increaseHp():void
    +getHp() : int
    +getType():int
}
class Prop_Bomb{
    +Prop_Bomb(int locationX, int locationY, int speedX, int speedY)
    +getHp() : int
    +getType():int
}
class Prop_Fire{
    +Prop_Fire(int locationX, int locationY, int speedX, int speedY)
    +getHp() : int
    +getType():int
}
AbstractFlyingObject <|--Props
Props <|-- Prop_Blood
Props <|-- Prop_Bomb
Props <|-- Prop_Fire
@enduml